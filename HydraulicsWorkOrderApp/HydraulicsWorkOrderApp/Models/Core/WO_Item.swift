//
//  WO_Item.swift
//  HydraulicsWorkOrderApp
//
//  Created by Bec Archer on 8/8/25.
//


// â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
// ðŸ“„ WO_Item.swift
// Represents a single piece of equipment in a WorkOrder
// â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
import SwiftUI
import Foundation
import FirebaseFirestoreSwift

// MARK: - WO_Item Model

struct WO_Item: Identifiable, Codable, Equatable {
    
    // â”€â”€â”€â”€â”€ Unique Identifier â”€â”€â”€â”€â”€
    var id: UUID = UUID()

    // â”€â”€â”€â”€â”€ Equipment Info â”€â”€â”€â”€â”€
    var tagId: String?                      // QR or RFID
    var imageUrls: [String]                // Uploaded to Firebase Storage
    var type: String                       // Cylinder, Pump, Hose, etc.

    // â”€â”€â”€â”€â”€ Dropdowns + Reason â”€â”€â”€â”€â”€
    var dropdowns: [String: String]        // Frozen at intake
    var dropdownSchemaVersion: Int
    var reasonsForService: [String]        // e.g., "Leaking", "Check Valves"
    var reasonNotes: String?

    // â”€â”€â”€â”€â”€ Status + Testing â”€â”€â”€â”€â”€
    var statusHistory: [WO_Status]        // Timeline entries
    var testResult: String?               // PASS / FAIL / nil
    var partsUsed: String?
    var hoursWorked: String?
    var cost: String?

    // â”€â”€â”€â”€â”€ Assignment + Flags â”€â”€â”€â”€â”€
    var assignedTo: String                // Technician name
    var isFlagged: Bool

    // â”€â”€â”€â”€â”€ Audit Trail â”€â”€â”€â”€â”€
    var tagReplacementHistory: [TagReplacement]?

    // END
}

// MARK: - Sample

extension WO_Item {
    static let sample = WO_Item(
        tagId: "QR-123456",
        imageUrls: [],
        type: "Cylinder",
        dropdowns: ["Color": "Black", "Size": "Large"],
        dropdownSchemaVersion: 1,
        reasonsForService: ["Rebuild & Reseal"],
        reasonNotes: "Leaking from top seal",
        statusHistory: [],
        testResult: nil,
        partsUsed: nil,
        hoursWorked: nil,
        cost: nil,
        assignedTo: "Maria",
        isFlagged: false,
        tagReplacementHistory: nil
    )
}

// â”€â”€â”€â”€â”€ Preview Template â”€â”€â”€â”€â”€

    #Preview(traits: .sizeThatFitsLayout) {
        VStack(alignment: .leading) {
            Text("WO_Item Preview")
                .font(.title2)
            Text("Assigned To: \(WO_Item.sample.assignedTo)")
        }
        .padding()
    }

